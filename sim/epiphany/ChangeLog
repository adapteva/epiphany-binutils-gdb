2015-10-24  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-sim.h: Change function prototypes to unsigned
	types for register values.
	* epiphany.c (epiphanybf_set_status): Use USI type for
	register values.
	(epiphanybf_set_debugcmd): Likewise.
	(epiphanybf_set_resetcore): Likewise.
	(epiphany_gie): Likewise.
	(epiphany_trap): Likewise.
	(epiphany_testset): Likewise.
	* traps.c (USI epiphany_rti): Likewise.

2015-10-22  Ola Jeppsson  <ola@adapteva.com>

	* configure: Regenerate.

2015-10-22  Ola Jeppsson  <ola@adapteva.com>

	* configure.ac (SIM_AC_OPTION_ALIGNMENT): Set 64-bit address word
	bitsize.
	* sim-main.h (CIA_ADDR): Define.
	(INVALID_INSTRUCTION_ADDRESS): Define.
	* dv-epiphany_mem.c (epiphany_mem_finish): Fix compiler warning.
	(epiphany_mem_signal): Change to address_word type for addr
	and nr_bytes.
	(epiphany_mem_io_read_buffer): Change to address word type for
	addr, nr_bytes, and return value.
	(epiphany_mem_io_write_buffer): Likewise.
	* epiphany.c (epiphanybf_scache_invalidate): Use
	INVALID_INSTRUCTION_ADDRESS instead of hardcoded value.
	* esim/esim.h (es_cluster_cfg): Use uint64_t type for
	addresses and sizes in the public API.
	(es_mem_store): Likewise.
	(es_mem_load): Likewise.
	(es_mem_testset): Likewise.
	* esim/esim-int.h (es_transl): Use address_word type for addresses and
	sizes internally.
	* esim/esim-net.h (es_net_addr_translate): Likewise.
	* esim/esim.c (es_tx_one_shm_store): Likewise.
	(es_addr_to_node(const es_state *esim, address_word addr): Likewise.
	(es_mem_store): Likewise.
	(es_mem_load): Likewise.
	(es_mem_testset): Likewise.
	(es_dump_config):
	* esim/esim-net.c (es_net_addr_translate): Adjust function header for
	above.

2015-10-19  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-fp.c (float64_calc): Common float64 calculation
	function. Same structure as the single-precision
	implementation.
	(get_epiphany_fzeroflag64): Implemented.
	(get_epiphany_fnegativeflag64): Implemented.
	(get_epiphany_funderflowflag64): Implemented.
	(get_epiphany_foverflowflag64): Implemented.
	(get_epiphany_finvalidflag64): Implemented.
	(epiphany_fadd64): Add call to float64_calc().
	(epiphany_fmul64): Likewise.
	(epiphany_fsub64): Likewise.
	(epiphany_fmadd64): Likewise.
	(epiphany_fmsub64): Likewise.
	(epiphany_fabs64): Likewise.
	(epiphany_fmax64): Likewise.
	(epiphany_fix64): Likewise.
	(epiphany_float64): Likewise.
	(GETMANTDF): Double precision float helper function.
	(GETEXPDF): Likewise.
	(DENORMALDF_P): Likewise.
	(MAKEZERODF): Likewise.
	(MAKEPOSITIVEDF): Likewise.
	(ZERODF_P): Likewise.
	(NEGATIVEDF_P): Likewise.
	(NANDF_P): Likewise.
	(MAKENANDF): Likewise.
	(DFTODI): Likewise.
	(DITODF): Likewise.

2015-10-18  Ola Jeppsson  <ola@adapteva.com>

	* dv-epiphany_mem.c (epiphany_mem_finish): Map address space
	at bottom level so user-defined mappings will take precedence.
	(static void epiphany_mem_signal): Adjust error messages to
	match sim-core's.

2015-10-16  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-fp.c: Remove dead code. Fix compiler
	warnings.
	(epiphany_float): Remove unused u.

2015-10-13  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-fp.c (epiphany_fadd64): Added placeholder function.
	(epiphany_fmul64): Likewise.
	(epiphany_fsub64): Likewise.
	(epiphany_fmadd64): Likewise.
	(epiphany_fmsub64): Likewise.
	(epiphany_fix64): Likewise.
	(epiphany_float64): Likewise.
	(epiphany_fabs64): Likewise.
	(epiphany_fmax64): Likewise.
	(get_epiphany_fzeroflag64): Likewise.
	(get_epiphany_fnegativeflag64): Likewise.
	(get_epiphany_funderflowflag64): Likewise.
	(get_epiphany_foverflowflag64): Likewise.
	(get_epiphany_finvalidflag64): Likewise.
	* sim/epiphany/epiphany-fp.h: Add prototypes for above
	functions.

2015-10-12  Ola Jeppsson  <ola@adapteva.com>

	* cgen-atomic.h: Fix signedness warnings.
	* epiphany-fp.c (float_as_int): Likewise.
	(int_as_float): Likewise.
	(fcal): Likewise.
	(epiphany_fabs): Likewise.
	* epiphany-fp.h: Likewise.
	* epiphany-sim.h: Likewise.
	* epiphany.c (epiphanybf_set_status): Likewise.
	(epiphanybf_set_debugcmd): Likewise.
	(epiphanybf_set_resetcore): Likewise.
	(epiphany_gie): Likewise.
	(SI epiphany_testset): Likewise.
	* oob-events.c (interrupt_handler): Likewise.
	* traps.c (SI epiphany_rti): Likewise.
	* sim-if.c (sim_open): Fix old style function prototype
	warnings.
	(sim_close): Likewise.
	(sim_create_inferior): Likewise.
	* esim/esim.c (es_set_cpu_state): Fix function type prototype
	warning.
	* esim/esim.h: Likewise.

2015-10-08  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-fp.c (fcal): Handle FMAX_FP_OP.
	(epiphany_fmax): New function.
	* epiphany-fp.h: Add prototype for epiphany_fmax().

2015-10-08  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-fp.c (epiphany_fix): Adjust arguments.
	(epiphany_float): Likewise.
	(epiphany_fabs): Likewise.
	* epiphany-fp.h: Adjust above function
	prototypes.

2015-09-29  Ola Jeppsson  <ola@adapteva.com>

	* epiphany-fp.c (epiphany_frecip): Removed.
	(epiphany_fsqrt): Removed.
	* epiphany-fp.h: Removed function prototypes.

2015-09-25  Ola Jeppsson  <ola@adapteva.com>

	* configure: Regenerated.

2015-09-25  Ola Jeppsson  <ola@adapteva.com>

	* Makefile.in: Delay building epiphany-sim-dummy
	until install stage. This way an in-tree assembler can be
	detected.
	* configure.ac: Remove redundant check for target
	assembler.

2015-09-23  Ola Jeppsson  <ola@adapteva.com>

	* config.in: Regenerate.
	* configure: Likewise.
	* cpu.c: Likewise.
	* decode.c: Likewise.
	* decode.h: Likewise.
	* sem-switch.c: Likewise.
	* sem.c: Likewise.

2015-09-23  Ola Jeppsson  <ola@adapteva.com>

	* configure.ac: Enable hardware by default.
	Enable emesh-sim by default.

2015-09-23  Ola Jeppsson  <ola@adapteva.com>

	* epiphany.c (epiphany_testset): Replace
	CIA_{GET,SET} with CPU_PC_{GET,SET}.
	* dv-epiphany_mem.c (void epiphany_mem_signal):
	Likewise.

2015-09-23  Ola Jeppsson  <ola@adapteva.com>

	* mem-barrier.h: Use __sync_synchronize() as
	fallback.

2015-09-23  Ola Jeppsson  <ola@adapteva.com>

	* sim-if.c (sim_open): Remove check for
	HAVE_DV_SOCKSER and remove call to dv_sockser_install.
	* tconfig.h: Remove check for HAVE_DV_SOCKSER.

2015-09-22  Ola Jeppsson  <ola@adapteva.com>

	* Merge Epiphany multicore simulator branch
	[ No log entries between: 2014-03-18 -- 2014-10-28 ]

2015-09-04  Ola Jeppsson  <ola@adapteva.com>

	* aclocal.m4: New file.
	* configure: Regenerate.
	* decode.c: Regenerate.
	* epiphany-desc.c: Remove.
	* epiphany-desc.h: Remove.
	* epiphany-opc.h: Remove.
	* sem-switch.c: Regenerate.
	* sem.c: Regenerate.

2015-09-04  Ola Jeppsson  <ola@adapteva.com>

	* Makefile.in: Adjust for upstream changes.
	* sim-main.h: Likewise.
	* mloop.in (execute): Change TRACE_INSN_INIT to
	CGEN_TRACE_INSN_INIT, TRACE_INSN to CGEN_TRACE_INSN, and
	TRACE_INSN_FINI to CGEN_TRACE_INSN_FINI.
	* tconfig.in: Rename ...
	* tconfig.h: ... to this.

2012-01-23  Joern Rennecke  <joern.rennecke@embecosm.com>

	* configure: Regenerate.

2011-11-16  Joern Rennecke  <joern.rennecke@embecosm.com>

	* epiphany-fp.c, Makefile.in, sim-if.c, traps.c, mloop.in:
	Remove trailing whitespace / replace octuple spaces with tabs.

	* Makefile.in, epiphany-sim.h, mloop.in, epiphany.c, sim-main.h:
	Update Copyright, reformat, delete obsolete code.
	* epiphany-fp.c, devices.c, sim-if.c, epiphany-fp.h, traps.c: Likewise.

	* epiphany-fp.c (FINISH, DENORM, f1, foo): Delete.
	(convert2int): Rename to ...
	(float_as_int) ... this.  Changed all callers.  Use a union.
	(int_as_float): New function.
	(fcal): Use int_as_float instead of volatile variables.
	Check return value of fesetround.
	(result, resusi, f, fn, dn): Delete.
	(epiphany_fix): Use int_as_float instead of volatile variables.
	(epiphany_icommon): Add flag handling.

2011-11-15  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* epiphany.c (epiphany_trap): Add TARGET_SYS_link and
	TARGET_SYS_unlink.

2011-11-10  Joern Rennecke  <joern.rennecke@embecosm.com>

	* epiphany.c (fetch_str): Delete.
	(syscall_read_mem, syscall_write_mem): New function.
	(epiphany_trap): Remove unused variables res_buf and fmt.
	Use cb_syscall.

2011-11-09  Joern Rennecke  <joern.rennecke@embecosm.com>

	* epiphany.c (printf_wrapper): Delete.
	(epiphany_trap): Move syscall handling into TRAP_OTHER.
	Use PARM3 to hold syscall number on entry and errno on exit.
	Add support for lseek.  Remove printf functionality.

2011-11-08  Joern Rennecke  <joern.rennecke@embecosm.com>

	* epiphany.c: Include <sys/time.h>, <sys/types.h>,
	<sys/stat.h>, <errno.h>, <unistd.h> and "targ-vals.h".
	(epiphany_trap) [TRAP_OTHER]: restore PARAM0 as subcode / syscall
	parameter.  Handle TARGET_SYS_gettimeofday, TARGET_SYS_stat and
	TARGET_SYS_fstat.

	* epiphany.c: Fix Copyright years and contributing party.
	* Makefile.in: Likewise.

2011-08-16  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* epiphany-desc.h, epiphany-opc.h: Deleted.

2011-08-16  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* epiphany-desc.h, model.c, epiphany-opc.h, arch.c, arch.h,
	* decode.c, sem-switch.c, sem.c, cpuall.h, cpu.c, decode.h,
	* epiphany-desc.c, cpu.h: Regenerated using CGEN.
	* configure, config.in: Regenerated using autoconf.

2011-08-16  Joern Rennecke  <joern.rennecke@embecosm.com>

	* epiphany-fp.c (WANT_CPU, WANT_CPU_EPIPHANYBF): Define.

	* devices.c (device_error): Constify message parameter.

	* epiphany.c (epiphany_trap): Replace zfree with free.

2010-03-20  Alan Lehotsky  <apl@alum.mit.edu>

	* model.c, decode.c, sem-switch.c, sem.c, cpu.c epiphany-desc.c
	  decode.h cpu.h epiphany-desc.h: Regenerate.

2010-03-20  Alan Lehotsky  <apl@alum.mit.edu>

	* epiphany-fp.c, epiphany.epiphany-fp.h: New file for fp simulator.
	* Makefile.in: Add dependencies
	* epiphany-opc.h, epiphany-desc.c, epiphany-desc.h,
	  sem-switch.c, sem.c, cpu.c, cpu.h: Regenerate.
	* sim-main.h: integrate fp simulator.

2010-03-08  Alan Lehotsky  <apl@alum.mit.edu>

	* model.c, sem-switch.c, decode.c, sem.c,
	  decode.h, cpu.h: Regenerate.
	* Makefile.in (EPIPHANYBF_INCLUDE_DEPS): Add dependent headers.

2010-02-21  Alan Lehotsky <apl@alum.mit.edu>

	* epiphany.c (epiphany_trap): finish implementing i/o for
		  simulator.

2009-10-03  Joern Rennecke  <joern.rennecke@embecosm.com>

	* model.c, decode.c, sem-switch.c, sem.c, decode.h, cpu.h: Regenerate.

2009-09-29  Joern Rennecke  <joern.rennecke@embecosm.com>

	* model.c, sem-switch.c, decode.c, sem.c, cpu.c, decode.h: Regenerate.
	* cpu.h: Likewise.

2009-09-19  Joern Rennecke  <joern.rennecke@embecosm.com>

	* cpu.h: Regenerate.

2009-09-17  Joern Rennecke  <joern.rennecke@embecosm.com>

	* sem-switch.c, decode.c, sem.c, decode.h: Regenerate.

	* sem-switch.c, sem.c: Regenerate.
