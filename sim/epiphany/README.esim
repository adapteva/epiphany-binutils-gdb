Build instructions:

In source root directory
mkdir build
cd build
LDFLAGS="-lrt" ../configure --target=epiphany-elf    \
  --enable-fast-install=N/A --enable-languages=c,c++ \
  --disable-gdbtk --disable-werror                   \
  --enable-emesh-sim --enable-hardware               \
  --prefix="/SOME/PREFIX"
(Change prefix to match your settings)
make
make install

Running:

Example:
$ epiphany-elf-run --e-coreid 0x809 --e-cols 2 --e-rows 2 --e-first-core 0x808 program

Options:
--e-coreid      coreid of this sim process.
--e-cols        Number of columns in mesh
--e-rows        Number of rows in mesh
--e-first-core  coreid of upper leftmost core in mesh.

GDB session:
$ epiphany-elf-gdb program
(gdb) target sim
Connected to simulator
(gdb) sim e-coreid 0x809
(gdb) sim e-cols 2
(gdb) sim e-rows 2
(gdb) sim e-first-core 0x808
(gdb) load
Loading section ivt_reset, size 0x4 lma 0x0
...
(gdb) run

One more example:
Simulating the upper leftmost 2x2 mesh of Parallella-16:
In four separate terminals issue:
$ epiphany-elf-run --e-coreid 0x808 --e-cols 2 --e-rows 2 --e-first-core 0x808 program1
$ epiphany-elf-run --e-coreid 0x809 --e-cols 2 --e-rows 2 --e-first-core 0x808 program2
$ epiphany-elf-run --e-coreid 0x848 --e-cols 2 --e-rows 2 --e-first-core 0x808 program3
$ epiphany-elf-run --e-coreid 0x849 --e-cols 2 --e-rows 2 --e-first-core 0x808 program4

Stale files:
If you run into troubles, remove /dev/shm/esim

