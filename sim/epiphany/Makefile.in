# Makefile template for Configure for the epiphany simulator
# Copyright (C) 1998, 1999, 2000, 2001, 2003, 2007, 2008, 2011
# Free Software Foundation, Inc.
# Contributed by Embecosm on behalf of Adapteva, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

## COMMON_PRE_CONFIG_FRAG

EPIPHANY_OBJS = epiphany.o cpu.o decode.o sem.o model.o mloop.o epiphany-fp.o

CONFIG_DEVICES = dv-sockser.o
CONFIG_DEVICES =
SIM_EXTRA_LIBS = -lm

SIM_OBJS = \
	$(SIM_NEW_COMMON_OBJS) \
	sim-cpu.o \
	sim-hload.o \
	sim-hrw.o \
	sim-model.o \
	sim-reg.o \
	cgen-utils.o cgen-trace.o cgen-scache.o cgen-fpu.o cgen-accfp.o \
	cgen-run.o sim-reason.o sim-engine.o sim-stop.o \
	sim-if.o arch.o \
	$(EPIPHANY_OBJS) \
	devices.o \
	traps.o \
	$(CONFIG_DEVICES)

# Extra headers included by sim-main.h.
SIM_EXTRA_DEPS = \
	$(CGEN_INCLUDE_DEPS) \
	arch.h cpuall.h epiphany-sim.h $(srcdir)/../../opcodes/epiphany-desc.h

SIM_RUN_OBJS = nrun.o
SIM_EXTRA_CLEAN = epiphany-clean

# This selects the epiphany newlib/libgloss syscall definitions.
NL_TARGET = -DNL_TARGET_epiphany

## COMMON_POST_CONFIG_FRAG

arch = epiphany


# EPIPHANY objs

EPIPHANYBF_INCLUDE_DEPS = \
	$(CGEN_MAIN_CPU_DEPS) \
	$(SIM_EXTRA_DEPS) \
	cpu.h decode.h eng.h cpuall.h targ-vals.h

epiphany.o: epiphany.c $(EPIPHANYBF_INCLUDE_DEPS)
epiphany-fp.o : epiphany-fp.c $(EPIPHANYBF_INCLUDE_DEPS)

arch.o: arch.c $(SIM_MAIN_DEPS) $(EPIPHANYBF_INCLUDE_DEPS)

devices.o: devices.c $(SIM_MAIN_DEPS)
traps.o: traps.c $(SIM_MAIN_DEPS) $(EPIPHANYBF_INCLUDE_DEPS)


# FIXME: Use of `mono' is wip.
mloop.c eng.h: stamp-mloop
stamp-mloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile
	$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \
		-mono -fast -pbb -switch sem-switch.c \
		-cpu epiphanybf -infile $(srcdir)/mloop.in
	$(SHELL) $(srcroot)/move-if-change eng.hin eng.h
	$(SHELL) $(srcroot)/move-if-change mloop.cin mloop.c
	touch stamp-mloop
mloop.o: mloop.c sem-switch.c $(EPIPHANYBF_INCLUDE_DEPS)

cpu.o: cpu.c $(EPIPHANYBF_INCLUDE_DEPS)
decode.o: decode.c $(EPIPHANYBF_INCLUDE_DEPS)
sem.o: sem.c $(EPIPHANYBF_INCLUDE_DEPS)
model.o: model.c $(EPIPHANYBF_INCLUDE_DEPS)

epiphany-clean:
	rm -f mloop.c eng.h stamp-mloop
	rm -f tmp-*
	rm -f stamp-arch stamp-cpu

# cgen support, enable with --enable-cgen-maint
CGEN_MAINT = ; @true
# The following line is commented in or out depending upon --enable-cgen-maint.
@CGEN_MAINT@CGEN_MAINT =

stamp-arch: $(CGEN_READ_SCM) $(CGEN_ARCH_SCM) $(CGEN_CPU_DIR)/epiphany.cpu
	$(MAKE) cgen-arch $(CGEN_FLAGS_TO_PASS) mach=all \
	  archfile=$(CGEN_CPU_DIR)/epiphany.cpu \
	  FLAGS="with-scache with-profile=fn"
	touch stamp-arch
arch.h arch.c cpuall.h: $(CGEN_MAINT) stamp-arch



stamp-desc: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_CPU_DIR)/epiphany.cpu $(CGEN_CPU_DIR)/epiphany.opc Makefile
	$(MAKE) cgen-desc $(CGEN_FLAGS_TO_PASS) cpu=epiphany mach=all \
			archfile=$(CGEN_CPU_DIR)/epiphany.cpu
	touch $@

desc.h: $(CGEN_MAINT) stamp-desc
	@true

stamp-cpu: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(CGEN_DECODE_SCM) $(CGEN_CPU_DIR)/epiphany.cpu
	$(MAKE) cgen-cpu-decode $(CGEN_FLAGS_TO_PASS) \
	  cpu=epiphanybf mach=epiphany32 SUFFIX= \
	  archfile=$(CGEN_CPU_DIR)/epiphany.cpu \
	  FLAGS="with-scache with-profile=fn" \
	  EXTRAFILES="$(CGEN_CPU_SEM) $(CGEN_CPU_SEMSW)"
	touch stamp-cpu
cpu.h sem.c sem-switch.c model.c decode.c decode.h: $(CGEN_MAINT) stamp-cpu
